@startuml
class SolarSystem {
    +__init__(imgui_manager: Any)
    +set_imgui_manager(): void
    +handle_event(event: Any, t: Any): void
    +world_to_screen(x: Any, y: Any, z: Any): Any
    +pick_planet(mouse_pos: Any, t: Any): None
    +draw_body(body: Any, t: Any, color: Any): void
    +render_ui(): void
    +window: WindowManager
    +interactions: UserInteractions
    +clicked_mouse_position: Any
    +selected_planet: Any
    +infobox_visible: Literal[]
    +imgui_manager: Any
}
WindowManager "1 " --o SolarSystem
UserInteractions "1 " --o SolarSystem
ImGuiManager "1" --o SolarSystem

class UserInteractions {
    +__init__(window_manager: Any, imgui_manager: Any)
    +handle_event(event: Any, resize: Any): void
    +imgui_manager: Any
    +window_manager: Any
    +screen: Surface
    +LINEAR_ZOOM_AMOUNT: float
    +dragging: Literal[]
    +CAMERA_DISTANCE: Literal[]
    
}

class ImGuiManager {
    +__init__()
    +setup_imgui(): PyGameRenderer
    +start_frame(screen: Any): void
    +end_frame(): void
    +cleanup(): void
    +handle_resize(width: Any, height: Any): void
    +renderer: PyGameRenderer
    
}

class WindowManager {
    +__init__()
    +resize(self, width: Any, height: Any): void
    +screen: Surface
    +get_current_dimensions(): Literal[]
    +WIDTH: Literal[]
    +HEIGHT: Literal[]

}

class SpaceBody {
    +__init__(radius: Any, color: Any, skyfield_name: Any, data_url: Any, orbital_center: None, 
    {method} name: str, description: str, orbital_period: str, distance_from_sun: str, 
    {method} mass: str, diameter: str, gravity: str, avg_temperature: str, age: str, orbit_distance: str)
    +compute_position(t: Any): Any[]
    +radius: Any
    +color: Any
    +skyfield_name: Any
    +data_url: Any
    +name: str
    +mass: str
    +diameter: str
    +avg_temperature: str
    +gravity: str
    +description: str
    +age: str
    +orbital_center: str
    +orbital_period: str
    +distance_from_sun: str
    +orbit_distance: str
    +ts: Timescale
    +ephemeris: NDArray[]
    +body: NDArray[]
    
}
SolarSystem o-- "1 of each   " Bodies 
SolarSystem -[hidden]-> Bodies

package "Bodies" {

    class Earth {}

    class Jupiter {}

    class Mars {}

    class Mercury {}

    class Moon {}

    class Neptune {}

    class Pluto {}

    class Saturn {}

    class Sun {}

    class Uranus {}

    class Venus {}

    class Pluto {}

    class Ariel {}

    class Callisto {}

    class Deimos {}

    class Europa {}

    class Ganymede {}

    class Iapetus {}

    class Io {}

    class Moon {}

    class Oberon {}

    class Phobos {}

    class Rhea {}

    class Titan {}

    class Titania {}

    class Umbriel {}
}

SpaceBody <|-- Bodies
@enduml